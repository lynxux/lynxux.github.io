{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2023-09-06-rust-note/","result":{"data":{"markdownRemark":{"excerpt":"变量 声明变量 值得注意的是，声明变量默认是不可变的。\n这里的赋值行为被称为绑定。 想对一个变量进行修改（再次绑定），有两种方式： 变量的类型 数字类型 字符类型 char 有些语言中，char 类型是一个 8位无符号整数，但是 rust 是 Unicode编码，实际是一个21位整数，系统填充为3…","html":"<h2 id=\"变量\" style=\"position:relative;\"><a href=\"#%E5%8F%98%E9%87%8F\" aria-label=\"变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变量</h2>\n<h3 id=\"声明变量\" style=\"position:relative;\"><a href=\"#%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\" aria-label=\"声明变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>声明变量</h3>\n<p>值得注意的是，声明变量默认是不可变的。\n这里的赋值行为被称为绑定。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> v <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>想对一个变量进行修改（再次绑定），有两种方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// 声明为可变变量</span>\n<span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> v <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nv <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 变量隐藏，每一次都会创建一个新变量并隐藏之前的绑定关系</span>\n<span class=\"token keyword\">let</span> v2 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> v2 <span class=\"token operator\">=</span> v2 <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"变量的类型\" style=\"position:relative;\"><a href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\" aria-label=\"变量的类型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变量的类型</h3>\n<h4 id=\"数字类型\" style=\"position:relative;\"><a href=\"#%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B\" aria-label=\"数字类型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数字类型</h4>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> number<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在 println 中将数据类型后缀添加到每个文本数字，以告知 Rust 有关数据类型的信息</span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 + 2 = {}\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1u32</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"字符类型-char\" style=\"position:relative;\"><a href=\"#%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B-char\" aria-label=\"字符类型 char permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>字符类型 char</h4>\n<p>有些语言中，char 类型是一个 8位无符号整数，但是 rust 是 Unicode编码，实际是一个21位整数，系统填充为32位</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> uppercase_s <span class=\"token operator\">=</span> <span class=\"token char\">'S'</span></code></pre></div>\n<h4 id=\"字符串类型-str-string\" style=\"position:relative;\"><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B-str-string\" aria-label=\"字符串类型 str string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>字符串类型 str String</h4>\n<blockquote>\n<p>关于 str 与 String 的具体区别，在所有权相关概念之后进行介绍\nstr 可以看做字符串切片，引用字符串切片使用 &#x26;str</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> char_1<span class=\"token punctuation\">:</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">=</span> <span class=\"token char\">'S'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> string_1 <span class=\"token operator\">=</span> <span class=\"token string\">\"string_1\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 值得注意的是，这里是&amp;str 类型，并不是String？</span>\n<span class=\"token keyword\">let</span> <span class=\"token class-name\">String_2</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token keyword\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ace\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"元组\" style=\"position:relative;\"><a href=\"#%E5%85%83%E7%BB%84\" aria-label=\"元组 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>元组</h4>\n<p>这里是指集合到一个复合值中的不同类型值的分组。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> tuple_3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5i32</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 访问元组使用索引的形式是 &lt;tuple>.&lt;index></span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is '{}' the {}th letter of the alphabet? {}\"</span><span class=\"token punctuation\">,</span> tuple_3<span class=\"token number\">.0</span><span class=\"token punctuation\">,</span> tuple_3<span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> tuple_3<span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"结构\" style=\"position:relative;\"><a href=\"#%E7%BB%93%E6%9E%84\" aria-label=\"结构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结构</h4>\n<p>rust中结构分为三种：经典结构，元组结构，单元结构</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// 定义</span>\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Student</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u8</span><span class=\"token punctuation\">,</span>\n    remote<span class=\"token punctuation\">:</span> <span class=\"token keyword\">bool</span>\n<span class=\"token punctuation\">}</span>\n    \n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Grades</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">f32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Unit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 实例化</span>\n<span class=\"token keyword\">let</span> user_1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    remote<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> user_2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    remote<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> mark_1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Grades</span><span class=\"token punctuation\">(</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> mark_2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Grades</span><span class=\"token punctuation\">(</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}, level:{}, remote:{}, Grades:{},{},{},{},avg:{}\"</span><span class=\"token punctuation\">,</span> user_1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> user_1<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>user_1<span class=\"token punctuation\">.</span>remote<span class=\"token punctuation\">,</span> mark_1<span class=\"token number\">.0</span><span class=\"token punctuation\">,</span> mark_1<span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> mark_1<span class=\"token number\">.2</span><span class=\"token punctuation\">,</span> mark_1<span class=\"token number\">.3</span><span class=\"token punctuation\">,</span> mark_1<span class=\"token number\">.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}, level:{}, remote:{}, Grades:{},{},{},{},avg:{}\"</span><span class=\"token punctuation\">,</span> user_2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> user_2<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span>user_2<span class=\"token punctuation\">.</span>remote<span class=\"token punctuation\">,</span> mark_2<span class=\"token number\">.0</span><span class=\"token punctuation\">,</span> mark_2<span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> mark_2<span class=\"token number\">.2</span><span class=\"token punctuation\">,</span> mark_2<span class=\"token number\">.3</span><span class=\"token punctuation\">,</span> mark_2<span class=\"token number\">.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%8F%98%E9%87%8F\">变量</a></p>\n<ul>\n<li><a href=\"#%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\">声明变量</a></li>\n<li><a href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\">变量的类型</a></li>\n</ul>\n</li>\n</ul>","fields":{"date":"2023-09-06"},"frontmatter":{"title":"Rust学习笔记（更新中）","description":"确实好难学！","tags":["工作","Rust"],"image":"https://source.unsplash.com/0eqgB57xMeA/1600x900","noComments":null}}},"pageContext":{"slug":"/posts/2023-09-06-rust-note/","previous":{"fields":{"slug":"/posts/2023-01-31-age25/"},"frontmatter":{"title":"记在二十五岁"}},"next":null,"dateFormat":"YYYY-MM-DD"}},"staticQueryHashes":["3250557336","3788958598"]}