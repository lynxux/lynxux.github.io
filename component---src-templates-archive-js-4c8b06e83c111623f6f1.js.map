{"version":3,"sources":["webpack:///./src/components/postlist/postlist.module.scss","webpack:///./src/components/postlist/postlist.js","webpack:///./src/components/page/page.module.scss","webpack:///./src/components/page/page.js","webpack:///./src/templates/archive.js"],"names":["module","exports","PostList","posts","compact","className","styles","map","node","key","fields","slug","to","frontmatter","title","description","excerpt","date","image","style","backgroundImage","Page","children","nopadding","paddingRight","paddingLeft","query","Archive","data","allMarkdownRemark","edges"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,SAAW,mCAAmC,KAAO,+BAA+B,uBAAyB,iDAAiD,kBAAoB,4CAA4C,WAAa,qCAAqC,wBAA0B,kDAAkD,iBAAmB,2CAA2C,mBAAqB,6CAA6C,0BAA4B,oDAAoD,yBAA2B,mDAAmD,YAAc,wC,8HCsD3oBC,MAnDE,EAAGC,QAAOC,aAEvB,yBAAKC,UAAWC,IAAM,UACnBH,EAAMI,IAAI,EAAGC,UACZ,yBACEH,UAAWC,IAAM,uBACjBG,IAAKD,EAAKE,OAAOC,MAEjB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,OAAOC,KAAMN,UAAWC,IAAM,MAC3C,yBACED,UACED,EAAUE,IAAM,mBAAyBA,IAAM,YAGjD,wBACED,UACED,EACIE,IAAM,0BACNA,IAAM,mBAGXE,EAAKK,YAAYC,QAElBV,GACA,yBAAKC,UAAWC,IAAM,yBACnBE,EAAKK,YAAYE,aAAeP,EAAKQ,SAG1C,yBACEX,UACED,EACIE,IAAM,yBACNA,IAAM,kBAGXE,EAAKE,OAAOO,QAGfb,GAAWI,EAAKK,YAAYK,OAC5B,yBACEb,UAAWC,IAAM,YACjBa,MAAO,CAAEC,gBAAgB,OAAQZ,EAAKK,YAAYK,MAA1B,Y,qBC5CxClB,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,cAAgB,oCAAoC,QAAU,gC,kHC6BrHoB,MA3BF,EAAGP,QAAOI,QAAOI,WAAUC,eAEpC,6BACE,4BAAQlB,UAAWC,IAAM,QACtBY,GACC,yBACEb,UAAWC,IAAM,cACjBa,MAAO,CAAEC,gBAAgB,OAAQF,EAAT,OAG5B,wBAAIb,UAAWC,IAAM,eAAoBQ,IAE3C,6BACET,UAAWC,IAAM,QACjBa,MACEI,GAAa,CACXC,aAAc,EACdC,YAAa,IAIhBH,K,kCCxBT,kIAQA,MAcaI,EAAK,aAqBHC,UAnCC,EAAGC,WACjB,MAAMzB,EAAQyB,EAAKC,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CAAQhB,MAAM,UAAUC,YAAY,qBAClC,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMD,MAAM,UAAUS,WAAS,GAC7B,kBAAC,IAAD,CAAUpB,MAAOA,EAAOC,SAAO","file":"component---src-templates-archive-js-4c8b06e83c111623f6f1.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postlist\":\"postlist-module--postlist--2j0CY\",\"item\":\"postlist-module--item--21vL1\",\"postlist__item_wrapper\":\"postlist-module--postlist__item_wrapper--YdbhM\",\"item__info__title\":\"postlist-module--item__info__title--2genc\",\"item__info\":\"postlist-module--item__info--1NhvD\",\"item__info__description\":\"postlist-module--item__info__description--3Q0xu\",\"item__info__date\":\"postlist-module--item__info__date--gj-Dx\",\"item__info_compact\":\"postlist-module--item__info_compact--qObi8\",\"item__info_compact__title\":\"postlist-module--item__info_compact__title--3s1Sz\",\"item__info_compact__date\":\"postlist-module--item__info_compact__date--2vYqp\",\"item__image\":\"postlist-module--item__image--3h6N1\"};","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styles from \"./postlist.module.scss\"\n\nconst PostList = ({ posts, compact }) => {\n  return (\n    <div className={styles[\"postlist\"]}>\n      {posts.map(({ node }) => (\n        <div\n          className={styles[\"postlist__item_wrapper\"]}\n          key={node.fields.slug}\n        >\n          <Link to={node.fields.slug} className={styles[\"item\"]}>\n            <div\n              className={\n                compact ? styles[\"item__info_compact\"] : styles[\"item__info\"]\n              }\n            >\n              <h2\n                className={\n                  compact\n                    ? styles[\"item__info_compact__title\"]\n                    : styles[\"item__info__title\"]\n                }\n              >\n                {node.frontmatter.title}\n              </h2>\n              {!compact && (\n                <div className={styles[\"item__info__description\"]}>\n                  {node.frontmatter.description || node.excerpt}\n                </div>\n              )}\n              <div\n                className={\n                  compact\n                    ? styles[\"item__info_compact__date\"]\n                    : styles[\"item__info__date\"]\n                }\n              >\n                {node.fields.date}\n              </div>\n            </div>\n            {!compact && node.frontmatter.image && (\n              <div\n                className={styles[\"item__image\"]}\n                style={{ backgroundImage: `url(${node.frontmatter.image})` }}\n              ></div>\n            )}\n          </Link>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default PostList\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__image\":\"page-module--header__image--5QocD\",\"header__title\":\"page-module--header__title--dt-iz\",\"content\":\"page-module--content--NsxoX\"};","import React from \"react\"\nimport styles from \"./page.module.scss\"\n\nconst Page = ({ title, image, children, nopadding }) => {\n  return (\n    <div>\n      <header className={styles[\"header\"]}>\n        {image && (\n          <div\n            className={styles[\"header__image\"]}\n            style={{ backgroundImage: `url(${image})` }}\n          ></div>\n        )}\n        <h1 className={styles[\"header__title\"]}>{title}</h1>\n      </header>\n      <section\n        className={styles[\"content\"]}\n        style={\n          nopadding && {\n            paddingRight: 0,\n            paddingLeft: 0,\n          }\n        }\n      >\n        {children}\n      </section>\n    </div>\n  )\n}\n\nexport default Page\n","import Layout from \"../components/layout\"\nimport Main from \"../components/main\"\nimport Page from \"../components/page\"\nimport PostList from \"../components/postlist\"\nimport React from \"react\"\nimport Sidebar from \"../components/sidebar\"\nimport { graphql } from \"gatsby\"\n\nconst Archive = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout title=\"Archive\" description=\"本站所有文章，尽在此处，一览无余。\">\n      <Sidebar />\n      <Main>\n        <Page title=\"Archive\" nopadding>\n          <PostList posts={posts} compact />\n        </Page>\n      </Main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($dateFormat: String) {\n    allMarkdownRemark(\n      filter: { frontmatter: { layout: { ne: \"page\" } } }\n      sort: { fields: fields___date, order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            date(formatString: $dateFormat)\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Archive\n"],"sourceRoot":""}