{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2023-09-06-rust-note/","result":{"data":{"markdownRemark":{"excerpt":"Rust 学习笔记","html":"<p>Rust 学习笔记</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">##</span> 变量</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">###</span> 声明变量</span>\n值得注意的是，声明变量默认是不可变的。\n这里的赋值行为被称为绑定。\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">let v = 10;</span>\n<span class=\"token punctuation\">```</span></span>\n\n<span class=\"token list punctuation\">-</span> 想对一个变量进行修改（再次绑定），有两种方式：\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">// 声明为可变变量\nlet mut v = 10;\nprintln!(\"{}\", v);\nv = 20;\nprintln!(\"{}\", v);\n\n// 变量隐藏，每一次都会创建一个新变量并隐藏之前的绑定关系\nlet v2 = 10;\nlet v2 = v2 + 10;</span>\n<span class=\"token punctuation\">```</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">###</span> 变量的类型</span>\n<span class=\"token title important\"><span class=\"token punctuation\">####</span> 数字类型</span>\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">let number: u32 = 14;\n\n// 在 println 中将数据类型后缀添加到每个文本数字，以告知 Rust 有关数据类型的信息\nprintln!(\"1 + 2 = {}\",1u32 + 2);</span>\n<span class=\"token punctuation\">```</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">####</span> 字符类型 char</span>\n有些语言中，char 类型是一个 8位无符号整数，但是 rust 是 Unicode编码，实际是一个21位整数，系统填充为32位\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">let uppercase_s = 'S'</span>\n<span class=\"token punctuation\">```</span></span>\n\n\n<span class=\"token title important\"><span class=\"token punctuation\">####</span> 字符串类型 str String</span>\n<span class=\"token blockquote punctuation\">></span> 关于 str 与 String 的具体区别，在所有权相关概念之后进行介绍\nstr 可以看做字符串切片，引用字符串切片使用 &amp;str\n\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">let char_1: char = 'S';\nlet string_1 = \"string_1\";   // 值得注意的是，这里是&amp;str 类型，并不是String？\nlet String_2: &amp;str = \"ace\";</span>\n<span class=\"token punctuation\">```</span></span>\n \n<span class=\"token title important\"><span class=\"token punctuation\">####</span> 元组</span>\n这里是指集合到一个复合值中的不同类型值的分组。\n\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">let tuple_3 = ('e', 5i32, true)\n// 访问元组使用索引的形式是 &lt;tuple>.&lt;index>\nprintln!(\"Is '{}' the {}th letter of the alphabet? {}\", tuple_3.0, tuple_3.1, tuple_3.2);</span>\n<span class=\"token punctuation\">```</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">####</span> 结构</span>\nrust中结构分为三种：经典结构，元组结构，单元结构\n\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">rust</span>\n<span class=\"token code-block language-rust\">// 定义\nstruct Student{\n    name: String,\n    level: u8,\n    remote: bool\n}\n    \nstruct Grades(char, char, char, char, f32);\n\nstruct Unit;\n\n// 实例化\nlet user_1 = Student{\n    name: String::from(\"link\"),\n    remote: false,\n    level: 1\n};\nlet user_2 = Student{\n    name: String::from(\"lun\"),\n    remote:true,\n    level: 2\n};\n\nlet mark_1 = Grades('A','A','A','A',9.9);\nlet mark_2 = Grades('A','C','B','A',9.1);\n\nprintln!(\"{}, level:{}, remote:{}, Grades:{},{},{},{},avg:{}\", user_1.name, user_1.level,user_1.remote, mark_1.0, mark_1.1, mark_1.2, mark_1.3, mark_1.4);\nprintln!(\"{}, level:{}, remote:{}, Grades:{},{},{},{},avg:{}\", user_2.name, user_2.level,user_2.remote, mark_2.0, mark_2.1, mark_2.2, mark_2.3, mark_2.4);</span>\n<span class=\"token punctuation\">```</span></span></code></pre></div>","tableOfContents":"","fields":{"date":"2023-09-06"},"frontmatter":{"title":"Rust学习笔记（更新中）","description":null,"tags":["工作","Rust"],"image":"https://source.unsplash.com/0eqgB57xMeA/1600x900","noComments":null}}},"pageContext":{"slug":"/posts/2023-09-06-rust-note/","previous":{"fields":{"slug":"/posts/2023-01-31-age25/"},"frontmatter":{"title":"记在二十五岁"}},"next":null,"dateFormat":"YYYY-MM-DD"}},"staticQueryHashes":["3250557336","3788958598"]}