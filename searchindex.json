{"categories":[],"posts":[{"content":"对于现在学习goland的新手来说（比如我），最熟悉的包管理方式应该就是GO MODULE（mod模式）了，因为GO 1.11版本之后就开始默认使用GOMODULE了。\n但是看过相关的文章大家都应该知道，在GO 1.5版本之前GO使用gopath进行包的管理，在GO 1.5之后又增加了vendor机制。\n如果一点都不了解go的包管理的可以去Go包管理详解-知乎先看一下。\n首先，GO mod模式会从import的地址上去查找对应的项目，然后把项目拉取到本地的gopath的pkg中。\n问题 1 ：如果我们要暂时修改import包中的代码，要怎么办？\n那我们可能直接修改gopath/pkg里的源码文件吗？\n​\t\u0026ndash; 答案是不可以，因为是只读的\n我想GO官方是希望我们使用自己的fork的仓库进行修改，然后拉取再进行测试，但是这样的操作实在过于繁琐，所以此时我们可以使用go vendor\n当我们使用go mod vender命令之后，会在项目的当前目录生成vendor文件，存放着我们所有需要的依赖文件。我们可以修改vendor文件里的源文件，然后进行测试。（当然这种方式并不推荐）\n问题 2 ：如果老的项目不使用mod进行管理，那么我们要怎么办？\n此时，一般项目中都会有vendor目录，如果没有也不要紧，此时都会从gopath的src目录下进行依赖的查找，所以推荐的方式时完全按照go path的方式去组织项目\n就是把所有的项目全部按照import中文件夹的组织方式进行存放，此时一般都会从gopath的src种查找源文件，而且此时如果需要修改引用的包中的源代码也是可以直接修改的。\n但是如果项目有vendor目录，会先查找vendor，如果找不到再从go path的src下查找。\n此时不要忘了把 GO111MODULE 设置为 off 或者空（为空要保证项目目录下没有mod文件）\n问题3：为什么goland中无法查找go path下的包？\n大概率是因为goland是默认开启GOMODULE集成的，即使你在terminal中关闭了GOMODULE，goland还是会使用mod模式。我们需要在Go/Go Modules设置中关闭Enable Go modules intergation\n参考：\n【1】Go包管理详解-知乎\n","id":0,"section":"posts","summary":"对于现在学习goland的新手来说（比如我），最熟悉的包管理方式应该就是GO MODULE（mod模式）了，因为GO 1.11版本之后就开始默认","tags":["工作","golang"],"title":"go 的包管理踩坑记录","uri":"https://lynxux.github.io/2022/07/2022-07-26-go-lib-record/","year":"2022"},{"content":" 想到了就去做吧！\n关于工作 1. Leetcode刷到700题 截止04.03，已刷320题 截止04.13，已刷331题（本月由于部分题2刷，可能进度稍慢） 2. MIT 6.824 (分布式系统) 预计5月前完成（lab1， lab2） 截止04.04，完成lab1 截止04.13，完成lab2A 截止04.15，完成lab2B 截止04.17，完成lab2C 截止04.20，完成lab2D 截止04.24，完成所有（lecture + lab1，2） 3. MIT 6.s081 或者 Tsinghua rcore (操作系统) 7月前完成 4. Stanford CS144 或者 gev/evio 开源项目 (计算机网络) 9月前完成 5. rosedb 或者 CMU 15-445 或者 MIT 6.830 (数据库) 12月前完成 关于学习 1. 中期报告 2. 毕业论文 关于生活 1. 运动 学校解封之后，还是要继续健身啊！希望能看到腹肌！ 2. 待补充 ","id":1,"section":"posts","summary":"想到了就去做吧！ 关于工作 1. Leetcode刷到700题 截止04.03，已刷320题 截止04.13，已刷331题（本月由于部分题2刷，可能进度","tags":["研究生","工作","生活"],"title":"2022年任务清单","uri":"https://lynxux.github.io/2022/04/2022-04-03-flags-in-2022/","year":"2022"},{"content":" 这篇本应该写在二月六日的文章，却被拖到了三月\n事记 这一年，回想到底做了哪些事情，我可能也回想不起多少\n这一年结束了学生时代的所有考试（应该？），经历第一次的项目结题和第一次做了手术。似乎就没有什么其他很重大的事情了。\n1. 结束了学生时代的所有考试\n我本科大四的生活好像发出过一次这样的感慨，没想到后来又读了研究生。这次发出这样的感概应该不会有下次了把，毕竟自己没有读博的打算。为什么这件事情对我来说还挺重要的呢？可能是因为我实在是厌烦了应试教育。每次考试我都要花很长的时间复习，可是自己对这些知识似乎并没有完全掌握，囫囵吞枣式的复习完成之后能考一个还过的去的分数就可以了。这么多年下来，总感觉自己学了很多东西，但是又忘记了，好像一无所获，一事无成。\n（最近准备面试的生活，又一次有了考试的感觉，可能还是因为自己还是什么都没有学习，又只能靠着临时抱佛脚把。。。\n2. 经历了第一次的项目结题\n算是第一次经历一次很大的事件，虽然这件事自己做的事情不多，但是毕竟是亲身经历，还是会觉得感触颇深。\n首先就是验证了之前的想法，验收前再怎么焦虑，验收的时候就会发现这其实没什么。可是这样还是改变不了自己的心态，也许多经历几次就会好把。\n其次，验收的时候真的很忙，也是自己第一次这么忙，从早上6点到晚上12点就一直在忙，中间连喘息的机会都没有。庆幸的是，自己也没觉得这有什么，算是又多了一次体验把。\n3. 做了一个小手术\n害，这个其实没什么好说的，只是因为是第一次做手术，感觉还是挺值得纪念的。也算是解决一件事情。\n最近\n开学以来，因为找工作，其实很忙。开学的两周里，除了做了一点老师的事情，其他的每天都在准备面经，到今天面经才基本上完成。然后今天晚上就经历了第一次面试，因为面试的岗位并不是我主动投递的，所以我也预料到了结果，但是表现的很差还是影响心情\u0026hellip;继续加油把！\n其他 最近的面试使得自己有忙碌了起来，也使自己开始思考关于工作的很多事情。比如，我要找一份什么样的工作（我想要去哪一个公司的哪一个部门）等等。看起来，我总是想在当前的选择中找到一个最好的，但是最好的那个自己似乎也能力不足。我是不是有点太贪心了呢？正确的做法是不是先做，而不是考虑那么多？不知道，在思考下去好像变成了哲学问题。\n在这个自己的本命年，我要找实习找工作并且毕业，看起来是很重要的一年，因为我要做出很多的选择，这些选择可能对以后影响深远。不过就是自己好像还没有能力去选择。\n新的一年，希望自己不要总是对自己作出限制，不要想得太多，努力把！\n","id":2,"section":"posts","summary":"这篇本应该写在二月六日的文章，却被拖到了三月 事记 这一年，回想到底做了哪些事情，我可能也回想不起多少 这一年结束了学生时代的所有考试（应该？），","tags":["研究生","工作","生活"],"title":"二十四岁","uri":"https://lynxux.github.io/2022/03/2022-03-01-age24/","year":"2022"},{"content":"更新 这次刷题按照【代码随想录】的章节顺序来刷的，预计会有接近200道题。\n这个网站不仅提供的题目的分类，还提供了题目的不同的语言的解答，感觉还是很不错的！\n由于博客不适合展示这么多的内容，所以请移步github-studynotes\n","id":3,"section":"posts","summary":"更新 这次刷题按照【代码随想录】的章节顺序来刷的，预计会有接近200道题。 这个网站不仅提供的题目的分类，还提供了题目的不同的语言的解答，感觉还","tags":["研究生","工作","算法"],"title":"LeetCode刷题记录","uri":"https://lynxux.github.io/2021/12/2021-12-14-leetcode-go-record/","year":"2021"},{"content":"距离回学校已经没有几天了，我也即将开始我的研二生活。\n很巧的是，当我写下这些文字的时候，我发现一年前的今天，我刚好正式开始了我的研究生生活。\n回看我的研一生活，有很多悲伤，痛苦，焦虑的时刻，也有一些开心的时刻。但是我第一个会想到的，应该还是那些并不太愉快的事情吧。\n主要的原因应该还是自己发现研究生的生活和自己想象的有很大区别，而自己也是初次面临类似工作的生活状态，有很多不适应的地方。\n这一年，平日里除了上课，写作业，就总是在给导师写专利，写软著，写报告，做一点基础的编码工作。感觉也不是很闲，但是却好像没有学到太多东西；与导师相处也并不是很愉快，有点为自己的毕业担心；眼看着要到研二了，找工作的事情又增加了我的焦虑。\n自己的性格本就是比较操心的类型，我总是会想的比较多，喜欢提早做准备。然而导师有很多事情自己没有办法掌控，但是又需要我去做。同时自己也比较自闭，导师带我去开会时，我一方面觉得做的东西不好，不好意思去开会；另一方面陌生人多的场合我都不喜欢去。这都会使我变得异常焦虑。\n我常常也会自我安慰，比如告诉自己社会就是这样；外出开会可以使自己变得更加的外向，使自己更加适应这样的场合等等。但是想起来的话，还是会变得很不开心。\n我可能就是很矛盾吧，总是在不断地提出问题再自我否定。\n吐槽了这么多， 那就再说一些开心的事情。\n比如：\n和沙雕网友们面了基，也认识了很多新朋友！ 去了趟昆山、杭州，也和老友们见了面！ 换了很多新的电子设备！ 开始为找工作做准备了！ 新的学期，还是希望论文能顺利，能找到实习，如果还能出去旅游一趟就完美了！\n","id":4,"section":"posts","summary":"距离回学校已经没有几天了，我也即将开始我的研二生活。 很巧的是，当我写下这些文字的时候，我发现一年前的今天，我刚好正式开始了我的研究生生活。 回","tags":["研究生","生活","随想"],"title":"我的研一","uri":"https://lynxux.github.io/2021/09/2021-09-06-first-year-graduate/","year":"2021"},{"content":"初衷 Windows 下的浏览器的代理是很容易解决的，各种软件或者插件都能直接解决，可是 terminal 中的代理之前尝试过很多次一直没有成功。这也导致了一直没有成功安装 Gatsby 。而且没有代理，git clone 也经常失败。这个问题直到前两天才解决。\n解决 网上其实相应的解决方法都有很多，但是一直就是失败。下面是一般的方法： set http_proxy=http://127.0.0.1:1080\rset http_proxys=http://127.0.0.1:1080\r这里的配置是一次性的，即当前会话关闭后，该配置就会失效。 http 和 https 都要设置。 然后使用 curl -v http://www.google.com 进行验证即可。 我们都知道1080是指端口，所以我们要把它替换为我们主机上对应的监听端口号。我使用的是 v2ray， 在设置里我们能看到本地的监听端口号为10808， 那就把1080替换为10808。\n看似很简单的过程，那为什么一直失败呢？\n经过不断的搜索，终于在 github issues-无法正确使用v2ray 中看到：\nV2rayN的情况下，右键开启http代理时，http代理的端口是socks+1。比如V2ray的配置文件socks代理是1080，那么默认http代理就是1081。有些软件只能用http代理不能用socks代理，这时就要用到1081这个。否则指向1080端口的话，v2ray就会不停的报错 v2ray.com/core/proxy/socks: unknown Socks version xx\n原来端口号应该是10809 ！把端口号改为10809后，成功！\n是个很小的问题，但是却困扰了我很久，遂记录一下。\n","id":5,"section":"posts","summary":"初衷 Windows 下的浏览器的代理是很容易解决的，各种软件或者插件都能直接解决，可是 terminal 中的代理之前尝试过很多次一直没有成功。这也导致了一直没有成功安装 Gatsby","tags":["windows","proxy","v2ray"],"title":"v2ray 下 windows terminal 代理的配置","uri":"https://lynxux.github.io/2021/07/2021-07-01-windows-terminal-proxy/","year":"2021"}],"tags":[{"title":"golang","uri":"https://lynxux.github.io/tags/golang/"},{"title":"proxy","uri":"https://lynxux.github.io/tags/proxy/"},{"title":"v2ray","uri":"https://lynxux.github.io/tags/v2ray/"},{"title":"windows","uri":"https://lynxux.github.io/tags/windows/"},{"title":"工作","uri":"https://lynxux.github.io/tags/%E5%B7%A5%E4%BD%9C/"},{"title":"生活","uri":"https://lynxux.github.io/tags/%E7%94%9F%E6%B4%BB/"},{"title":"研究生","uri":"https://lynxux.github.io/tags/%E7%A0%94%E7%A9%B6%E7%94%9F/"},{"title":"算法","uri":"https://lynxux.github.io/tags/%E7%AE%97%E6%B3%95/"},{"title":"随想","uri":"https://lynxux.github.io/tags/%E9%9A%8F%E6%83%B3/"}]}